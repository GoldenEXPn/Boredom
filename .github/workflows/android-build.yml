name: Android Build & Release

on:
  push:
    tags:
      - 'v*'  # This workflow will run when you push a tag that starts with 'v'
  workflow_dispatch:  # Also allows manual triggering from GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle

      - name: Make Gradle executable
        run: chmod +x ./gradlew
        
      # Decode the base64 encoded keystore and write it to a file
      - name: Decode Keystore
        run: |
          echo "${{ secrets.SIGNING_KEY }}" > keystore_base64.txt
          base64 -d keystore_base64.txt > key.jks
        
      # Move the keystore to the right location (if needed)
      - name: Move Keystore to Project Directory
        run: |
          # Update this path if your key.jks was in a different location
          mkdir -p ScreenTimeDemo
          mv key.jks ScreenTimeDemo/

      - name: Build with Gradle
        run: ./gradlew assembleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            app/build/outputs/apk/release/app-release.apk
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK as artifact (for manual workflow runs)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
